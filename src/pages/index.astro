---
import Layout from "../layouts/Layout.astro";
import FloatingBox from "../components/SmallBox.astro";
import ExpertiseBox from "../components/ExpBox.astro";
import { Picture } from "astro:assets";
import ToolsBox from '../components/ToolsLanguages.astro';
import iconImage from "../assets/icon.png";
import githubImg from "../assets/github.png";
import twitterImg from "../assets/twitter.png";
import linkedinImg from "../assets/linkedin.svg";
import { Config } from "../config";

const years = () => {
  const start = new Date(Config.me.started);
  const now = new Date();
  return now.getFullYear() - start.getFullYear();
};

const socials = {
  github: githubImg,
  twitter: twitterImg,
  linkedin: linkedinImg
};

---

<Layout>
  <main>
    <div class="flex flex-col gap-20">
      <article class="md:flex-row-reverse md:justify-end md:gap-12">
        <div class="flex flex-row justify-between sm:grid-cols-3">
          <div class="col-span-2 flex flex-col gap-6 md:gap-8 my-auto">
            <h1 class="text-3xl">Hi, Iâ€™m {Config.me.name.split(" ")[0]}</h1>
            <h2 class="w-auto sm:w-[85%] md:w-[90%] leading-6">
              I am a <strong class="font-normal text-primary"
                >{Config.me.job}</strong
              > with over
              <strong class="font-normal text-primary">{years} years</strong> of
              experience. I am currently working with<strong
                class="font-normal text-primary"
              >
                {Config.me.stack}</strong
              >. Outside of programming I like to {Config.me.hobby}.
            </h2>
            <div class="custom-breadcrumbs">
              <ul>
                {
                  Object.keys(Config.socials).map((social) => (
                    <li>
                      <Picture
                          src={socials[social as keyof typeof socials]}
                          formats={["avif", "webp"]}
                          alt={`${social} Icon`}
                          loading="eager"
                      />
                      <a
                        href={
                          Config.socials[social as keyof typeof Config.socials]
                        }
                        rel="noreferrer"
                        target="_blank"
                      >
                        {social.charAt(0).toUpperCase() + social.slice(1)}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
          <div class="ml-auto hidden sm:block">
            <div class="avatar">
              <div class="w-60 rounded">
                <Picture
                  src={iconImage}
                  formats={["avif", "webp"]}
                  alt="Profile icon"
                  loading="eager"
                />
              </div>
            </div>
          </div>
        </div>
      </article>

      <article class="flex flex-col gap-8">
        <header class="flex w-full flex-row justify-between gap-2">
          <h3 class="text-lg">Featured projects</h3>
          <a
            href={Config.me.projectLink}
            class="text-sm text-primary underline decoration-dashed underline-offset-8"
            target="_self"
            rel="noreferrer"
            >See all projects
          </a>
        </header>
        <section
          class="grid grid-cols-1 gap-4 sm:grid-cols-2 justify-center items-stretch"
        >
          {
            Object.keys(Config.projects).map((project) => (
              <FloatingBox
                title={project}
                href={
                  Config.projects[project as keyof typeof Config.projects].url
                }
                preview={
                  Config.projects[project as keyof typeof Config.projects].preview
                }
                tags={
                  Config.projects[project as keyof typeof Config.projects].tags
                }
              />
            ))
          }
        </section>
      </article>

      <article class="flex flex-col gap-8">
        <header class="flex w-full flex-row justify-between gap-2">
          <h3 class="text-lg">Tools and Languages</h3>
        </header>
        <section class="grid grid-cols-4 gap-6 sm:grid-cols-6 md:grid-cols-8 lg:grid-cols-8 items-stretch justify-center">
          {
            Object.keys(Config.tools).map((tool) => (
                <ToolsBox icon={tool as keyof typeof Config.tools} href={Config.tools[tool as keyof typeof Config.tools]}/>
            ))
          }
        </section>
      </article>

      <article class="flex flex-col gap-8">
        <header class="flex w-full flex-row justify-between gap-2">
          <h3 class="text-lg">Expertise</h3>
        </header>
        <section
            class="grid grid-cols-1 gap-4 sm:grid-cols-1 justify-center items-stretch"
        >
          {
            Object.keys(Config.exp).map((exp) => (
                <ExpertiseBox
                    title={exp}
                    occupation={
                      Config.exp[exp as keyof typeof Config.projects].occupation
                    }
                    details={
                      Config.exp[exp as keyof typeof Config.projects].details
                    }
                    languages={
                      Config.exp[exp as keyof typeof Config.projects].languages
                    }
                />
            ))
          }
        </section>
      </article>
    </div>
  </main>
</Layout>
